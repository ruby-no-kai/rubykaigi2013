---
title: Refactoring Fat Models with Patterns
description: |-
  “Fat models” cause maintenance issues in large apps. Only incrementally better than cluttering controllers with domain logic, they usually represent a failure to apply the Single Responsibility Principle (SRP). “Anything related to what a user does” is not a single responsibility.

  Early on, SRP is easier to apply. ActiveRecord classes handle persistence, associations and not much else. But bit-by-bit, they grow. Objects that are inherently responsible for persistence become the de facto owner of all business logic as well. And a year or two later you have a User class with over 500 lines of code, and hundreds of methods in it’s public interface. Callback hell ensues.

  This talk will explore patterns to smoothly deal with increasing intrinsic complexity (read: features!) of your application. Transform fat models into a coordinated set of small, encapsulated objects working together in a veritable symphony.
spoken_language: English
speakers:
- name: Bryan Helmkamp
  bio: Bryan (@brynary) is the founder of Code Climate, an automated code review tool
    for Ruby apps, and the lead organizer of the Gotham Ruby Conference in NYC. For
    the last seven years, he's been an active in the Ruby community as an acclaimed
    speaker, author and open source contributor. In 2009, he received a Ruby Hero
    Award for his efforts.
  company: Code Climate / Founder
  location: New York, USA
  gravatar: 
  links:
    github: brynary
    twitter: brynary
