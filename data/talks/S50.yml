---
title: Beyond Ruby
description: |-
  Ruby is the most flexible language out there, imposing no limitations on the
  developers, giving all the expressiveness possible. Or so we think. But there
  are languages pushing dynamic features and expressiveness far beyond what is
  possible in Ruby. Some are old, like Lisp and Smalltalk, some are just
  emerging, purely experimental languages, like Ioke or Newspeak. In this talk,
  we will take a look at some of these languages and what they can do that Ruby
  can't. What does it mean, to be homoiconic? How does a language without
  keywords work? Can I dispatch in more than one direction? And what is partial
  evaluation?
spoken_language: English
speakers:
- name: Konstantin Haase
  bio: |-
    As maintainer of Sinatra, Konstantin is an Open Source developer by heart. Ruby has become his language of choice since 2005. He regularly contributes to different widespread projects, like Rubinius and Rack.

    In 2012, Konstantin received the Ruby Hero Award for his outstanding contributions to the community.

    He now works on Open Source projects at Travis CI in Berlin, Germany.
  company: Travis CI
  location: Berlin
  gravatar: dddf1d0b08d492bbf18d7b865db098d8
  links:
    github: rkh
    twitter: konstantinhaase
